---
export interface Props {}

const {} = Astro.props;
const url = Astro.url.pathname;
const routes = [
    {
        path: "/",
        content: "MAP",
    },
    {
        path: "quests",
        content: "QUESTS",
    },
    {
        path: "about",
        content: "ABOUT",
    },
];
---

<nav class="navbar">
    {
        routes.map((route) => {
            return (
                <span class={`${url == route.path ? "active" : ""}`}>
                    {route.content}
                </span>
            );
        })
    }
</nav>
<style>
    .navbar {
        display: flex;
        justify-content: space-around;
        width: 100%;
        margin-top: 5px;
        position: fixed;
        z-index: 99999;
        transition: all 400ms ease-in-out;
    }

    .navbar.hidden {
        transform: translateY(-100%);
    }

    .navbar span {
        position: relative;
        border: 1px solid #c8c5c580;
        padding: 5px 5vw;
        font-weight: 600;
        color: #c8c5c580;
        transition: color 300ms ease-in-out;
    }

    .navbar span:after {
        position: absolute;
        left: 0%;
        top: 0%;
        content: "";
        height: 100%;
        transition: all 200ms linear;
        width: 100%;
        border-bottom: 3px solid #fff;
        transform: scaleX(0);
    }

    .navbar span:hover {
        color: #fff !important;
    }
    .navbar span.active {
        color: #fff !important;
        transform: scale(1);
    }
    .navbar span.active:after {
        transform: scale(1);
    }

    .navbar span.active {
        transform: scaleX(1);
        transition: all 300ms ease-in-out;
    }
</style>
<script>
    document.querySelectorAll(".navbar span").forEach((element) => {
        element.addEventListener("click", (e) => {
            const activeSpan = document.querySelector(".navbar span.active");
            if (activeSpan) {
                activeSpan.classList.remove("active");
            }
            element.classList.add("active");
        });
    });
</script>
